!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _akima2d ! in 
    interface  ! in :_akima2d
        module mod_akima_2d ! in :_akima2d:akima2d.f90
!            integer, private,allocatable,dimension(:,:,:) :: ixy_pos
!            logical, private,public,optional :: l_always_first_call=.false.
!            logical, private,public,optional :: l_first_call_akima=.true.

            subroutine akima_2d_init(nsys,nx1,ny1,k_ew_per,x10,y10,z1,poly,lon_in,lat_in) ! in :_akima2d:akima2d.f90:mod_akima_2d
                integer intent(hide) :: nsys = 16
                integer intent(hide),depend(z1) :: nx1 = size(z1, 1)
                integer intent(hide),depend(z1) :: ny1 = size(z1, 2)
                integer intent(in) :: k_ew_per
                real(kind=8) dimension(nx1,ny1),intent(in) :: x10
                real(kind=8) dimension(nx1,ny1),intent(in) :: y10
                real(kind=8) dimension(nx1,ny1),intent(in) :: z1
                real(kind=8) dimension(nx1+3,ny1+3,nsys),intent(out) :: poly
                real(kind=8) dimension(nx1+4,ny1+4),intent(out) :: lon_in
                real(kind=8) dimension(nx1+4,ny1+4),intent(out) :: lat_in
            end subroutine akima_2d_init

            subroutine akima_2d_eval(nsys,nx1,ny1,nx2,ny2,poly,x2,y2,lon_in,lat_in,z2) ! in :_akima2d:akima2d.f90:mod_akima_2d
                !integer intent(hide) :: nsys = 16
                !integer intent(hide),depend(poly) :: nx1 = size(poly, 1) - 3
                !integer intent(hide),depend(poly) :: ny1 = size(poly, 2) - 3
                !integer intent(hide),depend(z2) :: nx2 = size(x2, 1)
                !integer intent(hide),depend(z2) :: ny2 = size(y2, 2)
                integer intent(in) :: nsys
                integer intent(in) :: nx1
                integer intent(in) :: ny1
                integer intent(in) :: nx2
                integer intent(in) :: ny2
                real(kind=8) dimension(nx1+3,ny1+3,nsys),intent(in) :: poly
                real(kind=8) dimension(nx2,ny2),intent(in) :: x2
                real(kind=8) dimension(nx2,ny2),intent(in) :: y2
                real(kind=8) dimension(nx1+4,ny1+4),intent(in) :: lon_in
                real(kind=8) dimension(nx1+4,ny1+4),intent(in) :: lat_in
                real(kind=8) dimension(nx2,ny2),intent(out) :: z2
            end subroutine akima_2d_eval

!           subroutine akima_2d(k_ew_per,x10,y10,z1,x20,y20,z2,icall) ! in :_akima2d:akima2d.f90:mod_akima_2d
!               integer intent(in) :: k_ew_per
!               real(kind=8) dimension(:,:),intent(in) :: x10
!               real(kind=8) dimension(:,:),intent(in) :: y10
!               real(kind=8) dimension(:,:),intent(in) :: z1
!               real(kind=8) dimension(:,:),intent(in) :: x20
!               real(kind=8) dimension(:,:),intent(in) :: y20
!               real(kind=8) dimension(:,:),intent(out) :: z2
!               integer, optional,intent(in) :: icall
!           end subroutine akima_2d

        end module mod_akima_2d
    end interface 
end python module _akima2d
